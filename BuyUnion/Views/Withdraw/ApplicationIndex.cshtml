@model IEnumerable<BuyUnion.Models.WithdrawLog>

@{
    ViewBag.Title = "申请提现列表";
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";
    var paged = (PagedList.IPagedList<BuyUnion.Models.WithdrawLog>)Model;
    string strState = "所有状态";
    BuyUnion.Enums.WithdrawState? state = null;
    if (!string.IsNullOrWhiteSpace(Request["state"]))
    {
        state = (BuyUnion.Enums.WithdrawState)Enum.Parse(typeof(BuyUnion.Enums.WithdrawState), Request["state"], false);
        strState = state.GetDisplayName();
    }
}
@if (!User.IsInRole(SysRole.WithdrawManageCheck))
{
    <ol class="breadcrumb">
        <li>@Html.ActionLink("提现管理", "Index")</li>
        <li class="active">申请提现列表</li>
    </ol>
}
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @if (!User.IsInRole(SysRole.WithdrawManageCheck))
                {
                    <li>@Html.ActionLink("申请提现", "Application")</li>
                }
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        @strState<span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        <li>@Html.ActionLink("所有状态", "ApplicationIndex")</li>
                        @foreach (BuyUnion.Enums.WithdrawState item in Enum.GetValues(typeof(BuyUnion.Enums.WithdrawState)))
                        {
                            <li>
                                @Html.ActionLink(item.GetDisplayName(), "ApplicationIndex", new { state = item })
                            </li>
                        }
                    </ul>
                </li>
            </ul>
        </div>
    </div>
</nav>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Remark)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PayType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PayNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remark)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PayType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PayNumber)
            </td>
            <td>
                @item.State.GetDisplayName()
            </td>
            <td>
                @if (User.IsInRole(SysRole.WithdrawManageCheck))
                {
                    if (item.State == BuyUnion.Enums.WithdrawState.NoCheck)
                    {
                        <input type="button" value="同意" data-result="true" data-id="@item.ID" class="btn btn-default btn-check" />
                        <input type="button" value="不同意" data-result="false" data-id="@item.ID" class="btn btn-default btn-check" />
                    }
                }
            </td>
        </tr>
    }

</table>

@Html.PageList(paged, Url.PageUrl())

@section Scripts{
    @Scripts.Render("~/Bundles/applicationIndex")
}