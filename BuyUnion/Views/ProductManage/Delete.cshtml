@model BuyUnion.Models.ProductCreateEditViewModel

@{
    ViewBag.Title = "删除产品";
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";
    var fileUpload = new BuyUnion.Models.FileUpload();
    fileUpload.UseByCkEdit();
}

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index")">商品管理</a></li>
        <li class="active">删除</li>
    </ol>
    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.DetailsImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.DetailsImage)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Name)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Price)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.OriginalPrice)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Commission, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Commission)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Sales, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Sales)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Stock)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.CreateDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.CreateDateTime)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Remark)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10 col-md-offset-2">
            @using (Html.BeginForm())
            {
                <input id="btnDelete" type="submit" class="btn btn-danger" value="删除" />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
            }
        </div>
    </div>
</div>

@Html.EditorFor(model => fileUpload)
@section Scripts{
    @Scripts.Render("~/Bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace('Remark');
        CKEDITOR.config.readOnly = true;
        $("#btnDelete").click(function (e) {
            return confirm("确认要删除该商品");
        });
    </script>
}