@model BuyUnion.Models.SubmitOrderViewModel

@{
    ViewBag.Title = "编辑";
    Layout = "~/Views/Shared/_LayoutBackground.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink("订单管理", "Index")</li>
    <li class="active">编辑</li>
</ol>

<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Model.State.GetDisplayName()
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Free, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Free, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Free, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PaidAmount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.PaidAmount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PaidAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreateDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.CreateDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CreateDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UpdateDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.UpdateDateTime, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UpdateDateTime, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Model.PayType.GetDisplayName()
            @Html.ValidationMessageFor(model => model.PayCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PayCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.PayCode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PayCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Consignee, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Consignee, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Consignee, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            @Html.DisplayFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 form-control-static">
            <table class="table table-hover table-striped table-bordered">
                <thead>
                    <tr>
                        <td>@Html.DisplayNameFor(model => model.Details.FirstOrDefault().Count)</td>
                        <td>@Html.DisplayNameFor(model => model.Details.FirstOrDefault().Image)</td>
                        <td>@Html.DisplayNameFor(model => model.Details.FirstOrDefault().Name)</td>
                        <td>@Html.DisplayNameFor(model => model.Details.FirstOrDefault().Price)</td>
                    </tr>
                </thead>
                @foreach (var item in Model.Details)
                {
                    <tr>
                        <td>@item.Count</td>
                        <td>@Html.TableImg(item.Image)</td>
                        <td>@item.Name</td>
                        <td>@item.Price</td>
                    </tr>
                }
            </table>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10 form-control-static">
            @if (Model.State != BuyUnion.Enums.OrderState.Cancel)
            {
                if (Model.State == BuyUnion.Enums.OrderState.Paid)
                {
                    using (Html.BeginForm())
                    {
                        @Html.HiddenFor(model => model.ID)
                        <input name="State" value="@BuyUnion.Enums.OrderState.Shipped" type="hidden" />
                        <input type="submit" value="发货" class="btn btn-default" />
                    }
                }
                using (Html.BeginForm())
                {
                    @Html.HiddenFor(model => model.ID)
                    <input name="State" value="@BuyUnion.Enums.OrderState.Cancel" type="hidden" />
                    <input type="submit" value="取消订单" class="btn btn-default" />
                }
            }
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
